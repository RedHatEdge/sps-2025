---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-config
data:
  agent-config.yaml: |
    ---
    apiVersion: v1alpha1
    kind: AgentConfig
    rendezvousIP: 192.168.100.10
    metadata:
      name: acp
    hosts:
      - hostname: node0
        rootDeviceHints:
          deviceName: ACP_INSTALL_DEVICE
        interfaces:
          - name: ACP_INTERFACE_NAME
            macAddress: ACP_INTERFACE_MAC_ADDRESS
        networkConfig:
          interfaces:
            - name: ACP_INTERFACE_NAME
              type: ethernet
              state: up
              mac-address: ACP_INTERFACE_MAC_ADDRESS
              ipv4:
                enabled: true
                address:
                  - ip: 192.168.100.10
                    prefix-length: 24
                dhcp: false
          dns-resolver:
            config:
              server:
                - 192.168.100.1
          routes:
            config:
              - destination: 0.0.0.0/0
                next-hop-address: 192.168.100.1
                next-hop-interface: ACP_INTERFACE_NAME
                table-id: 254
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: install-config
data:
  install-config.yaml: |
    ---
    apiVersion: v1
    metadata:
      name: acp
    baseDomain: sps2025.com
    controlPlane:
      name: master
      replicas: 1
    compute:
    - name: worker
      replicas: 0
    networking:
      networkType: OVNKubernetes
      machineNetwork:
      - cidr: 192.168.100.0/24
    platform:
      none: {}
    pullSecret: 'PULL_SECRET'
    sshKey: 'COREOS_SSH_KEY'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: create-install-iso-playbook
data:
  create-agent-install-iso.yaml: |
    ---
    - name: Create OpenShift installation ISO
      hosts:
        - localhost
      gather_facts: false
      connection: local
      vars:
        create_dir: "/tmp/create-iso"
        input_dir: "/tmp/input"
        output_dir: "/tmp/output"
      pre_tasks:
        - name: Download openshift-install
          ansible.builtin.get_url:
            url: "https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.19.16/openshift-install-linux.tar.gz"
            dest: "{{ create_dir }}/"
        - name: Extract tooling
          ansible.builtin.unarchive:
            src: "{{ create_dir }}/openshift-install-linux.tar.gz"
            dest: "{{ create_dir }}/"
            remote_src: yes
        - name: Get router cert
          ansible.builtin.shell:
            cmd: oc get secret router-certs-default -n openshift-ingress -o yaml | grep 'tls.crt' | awk '{print $2}'
          register: _router_cert_raw
          changed_when: false
        - name: Extract tls.crt value
          set_fact:
            _router_tls_crt: "{{ _router_cert_raw.stdout | b64decode }}"
        - name: Slurp up install-config
          ansible.builtin.slurp:
            path: "{{ input_dir }}/install-config.yaml"
          register: _install_config
        - name: Convert install-config to yaml
          ansible.builtin.set_fact:
            _install_config_yaml: "{{ _install_config['content'] | b64decode | from_yaml }}"
        - name: Extract pull secret
          ansible.builtin.set_fact:
            _pull_secret: "{{ _install_config_yaml.pullSecret | from_json }}"
        - name: Append local registry auth info
          ansible.builtin.set_fact:
            _appended_pull_secret: >-
              {{
                {
                  'auths': _pull_secret.auths | combine(new_auth.auths, recursive=True)
                }
              }}
          vars:
            new_auth: "{{ {'auths': {'registry-oc-mirror.apps.ipc4.sps2025.com': {'auth': 'ZHVtbXlfdXNlcjpkdW1teV9wYXNzd29yZA=='}}} }}"
        - name: Update pull secret in install-config data
          ansible.builtin.set_fact:
            _new_install_config: "{{ _install_config_yaml | combine({'pullSecret': _appended_pull_secret | to_json}) }}"
        - name: Write out new install-config
          ansible.builtin.copy:
            content: "{{ _new_install_config | to_nice_yaml }}"
            dest: /tmp/create-iso/install-config.yaml
      tasks:
        - name: Copy agent config 
          ansible.builtin.copy:
            src: "{{ input_dir }}/agent-config.yaml"
            dest: "{{ create_dir }}/agent-config.yaml"
            remote_src: true
        - name: Add additional trust bundle
          ansible.builtin.blockinfile:
            path: "{{ create_dir }}/install-config.yaml"
            insertafter: EOF
            block: |
              additionalTrustBundle: |
                {{ _router_tls_crt | indent(width=2) }}
        - name: Create directory for additional manifests
          ansible.builtin.file:
            path: "{{ create_dir }}/openshift"
            state: directory
        - name: Copy additional manifests to {{ create_dir }}/openshift
          ansible.builtin.copy:
            src: "{{ file }}"
            dest: "{{ create_dir }}/openshift/{{ file.split('/')[-1] }}"
            remote_src: true
          with_fileglob:
            - "{{ input_dir }}/additional-manifests/*.yaml"
          loop_control:
            loop_var: file
        - name: Print out contents of {{ create_dir }}
          ansible.builtin.shell:
            cmd: "ls -lsaht {{ create_dir }}"
          changed_when: false
        - name: Generate install ISO
          ansible.builtin.shell:
            cmd: "{{ create_dir }}/openshift-install --dir {{ create_dir }} agent create image --log-level debug"
      post_tasks:
        - name: Copy created ISO and auth into to {{ output_dir }}
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: "{{ output_dir }}/"
            remote_src: true
          loop:
            - "{{ create_dir }}/agent.x86_64.iso"
            - "{{ create_dir }}/auth"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: additional-manifests
data:
  namespace.yaml: |
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: openshift-gitops-operator
      labels:
        openshift.io/cluster-monitoring: 'true'
  operatorgroup.yaml: |
    ---
    apiVersion: operators.coreos.com/v1
    kind: OperatorGroup
    metadata:
      name: openshift-gitops-operator
      namespace: openshift-gitops-operator
    spec:
      upgradeStrategy: Default
  subscription.yaml: |
    ---
    apiVersion: operators.coreos.com/v1alpha1
    kind: Subscription
    metadata:
      name: openshift-gitops-operator
      namespace: openshift-gitops-operator
    spec:
      channel: latest
      installPlanApproval: Automatic
      name: openshift-gitops-operator
      source: redhat-operators
      sourceNamespace: openshift-marketplace
  clusterrolebinding.yaml: |
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: openshift-gitops-admin
    subjects:
      - kind: ServiceAccount
        name: gitops-service-cluster
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-applicationset-controller
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-argocd-application-controller
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-argocd-dex-server
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-argocd-grafana
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-argocd-redis
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-argocd-redis-ha
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-argocd-server
        namespace: openshift-gitops
      - kind: ServiceAccount
        name: openshift-gitops-operator-controller-manager
        namespace: openshift-operators
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
  job.yaml: |
    ---
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: apply-acp-standard-services
      namespace: openshift-gitops
      labels:
        app.kubernetes.io/name: apply-acp-standard-services
    spec:
      backoffLimit: 0
      template:
        spec:
          serviceAccountName: gitops-service-cluster
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          restartPolicy: Never
          containers:
            - name: apply-acp-standard-services
              image: registry.redhat.io/openshift4/ose-cli:latest
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop: ["ALL"]
                seccompProfile:
                  type: RuntimeDefault
              command:
                - /bin/sh
                - -c
                - |
                  echo "Waiting for all cluster operators to be healthy..."
                  oc wait --all \
                    --for=condition=Available=True \
                    --for=condition=Progressing=False \
                    --for=condition=Degraded=False \
                    clusteroperators.config.openshift.io \
                    --timeout=120m

                  echo "All operators are healthy. Applying manifests..."
                  cat <<'EOF' | oc apply -f -
                  ---
                  apiVersion: v1
                  kind: Secret
                  metadata:
                    labels:
                      argocd.argoproj.io/secret-type: repository
                    name: acp-standard-services-public-repository
                    namespace: openshift-gitops
                  stringData:
                    insecure: 'true'
                    name: acp-standard-services-public
                    project: default
                    type: git
                    url: http://code-gitea.apps.ipc4.sps2025.com/admin/acp-standard-services-public.git
                  ---
                  apiVersion: argoproj.io/v1alpha1
                  kind: Application
                  metadata:
                    name: acp-standard-services
                    namespace: openshift-gitops
                    labels:
                      application: acp-standard-services
                  spec:
                    destination:
                      name: ""
                      server: https://kubernetes.default.svc
                    project: default
                    syncPolicy:
                      automated:
                        selfHeal: true
                    source:
                      repoURL: http://code-gitea.apps.ipc4.sps2025.com/admin/acp-standard-services-public.git
                      targetRevision: dev
                      path: charts/acp-standard-services
                      helm:
                        values: |
                          gitBranch: dev
                          localStorage:
                            forceWipeDrives: true
                            deviceClasses:
                              - name: node0-local-storage
                                nodes:
                                  - node0
                                deviceSelectorPaths:
                                  - /dev/nvme0n1
                                  - /dev/nvme1n1
                                  - /dev/nvme2n1
                                default: true
                          virtualization:
                            commonBootImageImport: true
                          itAutomation:
                            overrideAnsibleAutomationPlatformVersion: stable-2.6
                            ansibleAutomationPlatform:
                              database:
                                storageClass: lvms-node0-local-storage
                              hub:
                                disabled: true
                              lightspeed:
                                disabled: true
                  EOF
                  echo "Manifests applied successfully."